#!/usr/bin/env python3

USAGE = '''
usage: 
compiling: ./jvm file.java -l
running:   ./jvm -r file -l

file.java -> file to be compiled
-l/--lib  -> compile with algs4 library (optional)
-r/--run  -> run file
'''

import os
import os.path
from argparse import ArgumentParser


JC = 'javac'
JR = 'java'
JC_ALGS4_LIB = 'javac-algs4'	# compile with lib
JR_ALGS4_LIB = 'java-algs4'	# run with lib



def get_jvm_cmd(file, lib=False):
	assert (os.path.exists(file)), f'ERROR: {file} not found'
	if lib:
		return f'{JC_ALGS4_LIB} {file}'
	else:
		return f'{JC} {file}'


def get_run_cmd(file, lib=False):
	'''attempt to run compiled java program'''
	compiled_file = f'{file}.class'
	assert (os.path.exists(compiled_file)), f'ERROR: {file} not found'
	if lib:
		return f'{JR_ALGS4_LIB} {file}'
	else:
		return f'{JR} {file}'



def main():
	a = ArgumentParser(description='script to compile/run java programs')
	a.add_argument('--lib',
				   '-l', action='store_true',
				   help='compile with the algs4 lib')
	a.add_argument('--run', '-r', 
				   action='store_true', 
				   help='run a compiled java program')
	a.add_argument('file', help='file to be compiled/run')

	res = a.parse_args()

	if res.run:
		cmd = get_run_cmd(res.file, res.lib)
	else:
		cmd = get_jvm_cmd(res.file, res.lib)

	os.system(cmd)

if __name__ == '__main__':
	main()
	
